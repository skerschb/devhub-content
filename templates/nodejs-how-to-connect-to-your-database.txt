:template: devhub-article

.. ---------------------------------------------------------------
.. META FIELDS FOR SEO / SOCIAL
.. ---------------------------------------------------------------

.. meta-description:: 

   Introduction to the basics of using MongoDB with Node.js. Connect to a
   MongoDB database with Node.js, retrieve a list of databases, and print
   the results.

.. twitter::
   :site: @mongodb
   :creator: @Lauren_Schaefer
   :title: Quick Start: Node.js & MongoDB - How to Get Connected to Your Database
   :image: </path/to/image>

   Introduction to the basics of using MongoDB with Node.js. Connect to
   a MongoDB database with Node.js, retrieve a list of databases, and
   print the results.

.. ---------------------------------------------------------------
.. ARTICLE METADATA FIELDS (TO POPULATE FILTERS AND ARTICLE PAGE)
.. ---------------------------------------------------------------

.. include:: /includes/authors/schaefer-lauren.rst

.. pubdate:: January 31, 2019

.. type:: quickstart

.. level:: beginner

.. tags:: 

   * foo
   * bar
   * baz

.. languages::

   * nodejs

.. products::

   * MongoDB

.. atf-image:: /img/heros/how-to-write-an-article.png

.. related::

   * How to connect to a MongoDB database using Node.js
   * How to create MongoDB documents using Node.js

.. ---------------------------------------------------------------
.. ARTICLE CONTENT
.. ---------------------------------------------------------------

=========================================================
Node.js & MongoDB - How to Get Connected to Your Database
=========================================================

.. introduction::

    Use Node.js? Want to learn MongoDB? This is the blog series for
    you! In this Quick Start series, I'll walk you through the basics
    of how to get started using MongoDB with Node.js. In today's post,
    we'll work through connecting to a MongoDB database from a Node.js
    script, retrieving a list of databases, and printing the results
    to your console.

.. prerequisites::

   Set Up
   ------

   Before we begin, we need to ensure you've completed a few prerequisite steps.

   Install Node.js
   ~~~~~~~~~~~~~~~
   
   First, make sure you have a supported version of Node.js installed
   (the MongoDB Node.js Driver requires Node 4.x or greater and for
   these examples, I've used Node.js 10.16.3).
   
   Install the MongoDB Node.js Driver
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   The MongoDB Node.js Driver allows you to easily interact with
   MongoDB databases from within Node.js applications. You'll need
   the driver in order to connect to your database and execute the
   queries described in this Quick Start series.
   
   If you don't have the MongoDB Node.js Driver installed, you can
   install it with the following command.
   
   .. code-block:: sh
   
      npm install mongodb
   
   At the time of writing, this installed version 3.3.2 of the
   driver. Running npm list mongodb will display the currently
   installed driver version number. For more details on the driver
   and installation, see the official documentation.
   
   Create a free MongoDB Atlas cluster and load the sample data
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
   Next, you'll need a MongoDB database. Your database will be stored
   inside of a cluster. At a high level, a cluster is a set of nodes
   where copies of your database will be stored.
   
   The easiest way to get started with MongoDB is to use Atlas,
   MongoDB's fully-managed database-as-a-service. Head over to
   Atlas and create a new cluster in the free tier. Once your
   tier is created, load the sample data.
   
   If you're not familiar with how to create a new cluster and load
   the sample data, check out this video tutorial from MongoDB
   Developer Advocate Maxime Beugnet.
   
   Get your cluster's connection info
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
   The final step is to prep your cluster for connection.
   
   In Atlas, navigate to your cluster and click CONNECT. The Cluster
   Connection Wizard will appear.
   
   The Wizard will prompt you to whitelist your current IP address
   and create a MongoDB user if you haven't already done so. Be
   sure to note the username and password you use for the new
   MongoDB user as you'll need them in a later step.
   
   Next, the Wizard will prompt you to choose a connection method.
   Select Connect Your Application. When the Wizard prompts you
   to select your driver version, select Node.js and 3.0 or
   later. Copy the provided connection string.
   
   For more details on how to access the Connection Wizard and
   complete the steps described above, see the official
   documentation.

.. content::

   Connect to your database from a Node.js application
   ---------------------------------------------------

   Now that everything is set up, it's time to code! Let's write a
   Node.js script that connects to your database and lists the
   databases in your cluster.
   
   Import MongoClient
   ~~~~~~~~~~~~~~~~~~
   The MongoDB module exports MongoClient, and that's what we'll use
   to connect to a MongoDB database. We can use an instance of
   MongoClient to connect to a cluster, access the database in that
   cluster, and close the connection to that cluster.
   
   .. code-block:: javascript
   
      const {MongoClient} = require('mongodb');
   
   Create our main function
   ~~~~~~~~~~~~~~~~~~~~~~~~
   
   Let's create an asynchronous function named main() where we will
   connect to our MongoDB cluster, call functions that query our
   database, and disconnect from our cluster.
   The first thing we need to do inside of main() is create a
   constant for our connection URI. The connection URI is the
   connection string you copied in Atlas in the previous section.
   When you paste the connection string, don't forget to update
   <username> and <password> to be the credentials for the user you
   created in the previous section. **Note**: the username and
   password you provide in the connection string are NOT the same as
   your Atlas credentials.
   
   .. code-block:: javascript
   
      //
      // Connection URI. Update <username>, <password>, and <your-cluster-url> to reflect your cluster.
      // See https://docs.mongodb.com/ecosystem/drivers/node/ for more details
      //
      const uri = "mongodb+srv://<username>:<password>@<your-cluster-url>/test?retryWrites=true&w=majority";
   
   more stuff...

.. summary::

   Conclude or summarize your article.

